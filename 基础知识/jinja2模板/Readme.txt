Jinja2是Python下一个被广泛应用的模版引擎，他的设计思想来源于Django的模板引擎，并扩展了其语法和一系列强大的功能。其中最显著的一个是增加了沙箱执行功能和可选的自动转义功能，这对大多应用的安全性来说是非常重要的

我们知道用flask可以用到模板，将py的数据渲染到html，但是并不是jinja一定要http的，比如salt
https://github.com/pallets/jinja


模板引擎有什么用呢？

我们先来看看目前的模板引擎都是用在了什么地方。最常见的就是用在WEB系统中，可以让程序开发人员及美工设计人员分工明确，这也是MVC开发模式不可少的。再就是用在代码生成上，通过设置模板，可以大量减轻机械重复的手工操作，提供工作效率。

模板引擎的设计目的，无非是要让不懂程序的设计人员，不用关心程序逻辑是怎么实现，只用关心自己的界面呈现。但是设计人员必须要学习模板引擎使用方法，包括模板语法、模板变量、甚至有些变量或参数在设计模板时需要跟程序员协商好，该使用哪些变量、如何使用等等。

试想一下，如果模板引擎复杂到一定程度，无异于要设计人员学习一种新的程序语言，而模板页面必定会包含一些类似于ASP、PHP一样的脚本语言，仿佛又回到了代码与界面夹杂在一起的年代，不同的是，这些都是设计人员来做的。所以，个人认为，模板引擎不能太复杂，但也必须具备一些程序语言的基本语法语句，比如：判断语句、循环语句等等。

后台代码和前台代码 就不会掺杂在一起，后台逻辑和前台代码分离开，通过模板可以进行渲染 和数据显示。

概念:
模板引擎（这里特指用于Web开发的模板引擎）是为了使用户界面与业务数据（内容）分离而产生的，它可以生成特定格式的文档，用于网站的模板引擎就会生成一个标准的HTML文档.
jinja是个库，用来把html字符串（或文件）里面的特定格式的占位符填上，返回另一个html的字符串。
当然，模板引擎也可以不单单是web开发中，比如saltstack。